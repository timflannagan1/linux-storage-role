---
- name: Stat the final device file
  include_tasks: stat_device.yml

#
# Install package as needed throughout the playbook execution
#
- name: Install xfsprogs for xfs file system type
  package:
    name: xfsprogs
    state: present
  when: "'xfsprogs' not in installed_packages and fs_type == 'xfs' and not ansible_check_mode"

- name: Install e2fsprogs for ext file system type
  package:
    name: e2fsprogs
    state: present
  when: "'e2fsprogs' not in installed_packages and fs_type == 'ext2' or fs_type == 'ext3' or fs_type == 'ext4' and not ansible_check_mode"

- name: Install util-linux as needed
  package:
    name: util-linux
    state: present
  when: "'util-linux' not in installed_packages and fs_type == 'swap' or state == 'absent' and not ansible_check_mode"

- set_fact:
    installed_packages: "{{ installed_packages + ['xfsprogs'] }}"
  when: 'xfsprogs' not in installed_packages

- set_fact:
    installed_packages: "{{ installed_packages + ['e2fsprogs'] }}"
  when: 'e2fsprogs' not in installed_packages

- set_fact:
    installed_packages: "{{ installed_packages + ['util-linux'] }}"
  when: 'util-linux' not in installed_packages

#
# Do filesystem tasks here 
#
- name: Remove file system as needed
  command: wipefs {{ fs_destroy_options }} {{ device_path }}
  when: not fs_type or state == 'absent' and device_status.stat.exists and not ansible_check_mode

- name: Create filesystem as needed
  filesystem:
    dev: "{{ device_path }}"
    fstype: "{{ fs_type }}"
    opts: "{{ fs_create_options }}"
  when: fs_type and state == 'present' and device_status.stat.exists
